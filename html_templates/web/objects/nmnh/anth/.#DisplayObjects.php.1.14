<?php
/*
*  Copyright (c) KE Software Pty Ltd - 2001
*/
if (!isset($WEB_ROOT))
	$WEB_ROOT = dirname(dirname(dirname(dirname(realpath(__FILE__)))));
require_once ($WEB_ROOT . '/objects/lib/webinit.php');
require_once ($LIB_DIR . 'BaseDisplayObjects.php');
require_once ($WEB_ROOT . '/objects/common/RecordExtractor.php');

$GLOBALS['STRINGS_DIR'] = $WEB_ROOT . "/objects/" . $GLOBALS['BACKEND_TYPE'] . "/" . $GLOBALS['DEPARTMENT'] . "/strings/";

class
NmnhAnthStandardDisplay extends BaseStandardDisplay
{
	// Keep Aspect Ratio for image on display page
        var $KeepAssociatedImagesAspectRatio = 1;

	function
	NmnhAnthStandardDisplay()
	{
		$this->BaseStandardDisplay();
		$this->Database = 'enmnh';
		$this->DisplayImage = 0;
		$this->SuppressEmptyFields = 0;
		
		// Values used below - we only want to get them once
                $recEx = new RecordExtractor();
                $recEx->ExtractFields
                (
                        array
                        (
				'CatBarcode',
                                'CulCultureRef_tab->eparties->SummaryData',
				'ColParticipantRef_tab->eparties->NamFullName',
				'AccAccessionLotRef_tab->eaccessionlots->AcqSourceLocal',
				'IdeObjectName_tab',
                        	'IdeClassIndex_tab',
                        	'IdeIndexTerm_tab',
                        	'IdeSubType_tab',
                        	'IdeVariety_tab',
                        	'IdeTerm_tab',
                        	'ArcObjectDate_tab',
                                'CulCurrent_tab',
                                'IdeAnthCurrent_tab',
                        )
                );

		// START other numbers + other numbers type
		$otherNumbersValue = new Field;
		$otherNumbersValue->ColName = 'CatOtherNumbersValue_tab';

		$otherNumbersType = new Field;
		$otherNumbersType->ColName = 'CatOtherNumbersType_tab';

		$otherNumbersTable = new Table;
		$otherNumbersTable->Name = 'OtherNumbers';
		$otherNumbersTable->Headings = array('', 'Type');
		$otherNumbersTable->Columns = array($otherNumbersValue, $otherNumbersType);
		// END other numbers + other numbers type

		// START Site Classification Details
		$arcSiteClass1 = new Field;
		$arcSiteClass1->ColName = 'ArcClassification1_tab';

		$arcSiteClass2 = new Field;
		$arcSiteClass2->ColName = 'ArcClassification2_tab';

		$arcSiteClass3 = new Field;
		$arcSiteClass3->ColName = 'ArcClassification3_tab';

		$arcSiteClass4 = new Field;
		$arcSiteClass4->ColName = 'ArcClassification4_tab';

		$arcSiteClassTable = new Table;
		$arcSiteClassTable->Name = 'SiteClassDetails';
		$arcSiteClassTable->Headings = array('Classification 1', 'Classification 2', 'Classification 3', 'Classification 4');
		$arcSiteClassTable->Columns = array($arcSiteClass1, $arcSiteClass2, $arcSiteClass3, $arcSiteClass4);
		// END Site Classification Details

		// START Participants 
		$participantArray = $recEx->MultivalueFieldAsArray("ColParticipantRef_tab->eparties->NamFullName");
		$participantDisplay = "";

                for ($i = 0;$i < count($participantArray); $i++)
                {
			if ($i == 0)
			{
				$participantDisplay = $participantArray[$i];
			}
			elseif ($i == count($participantArray) -1)
			{
                		$participantDisplay .= " & " . $participantArray[$i];
			}
			else
			{
                		$participantDisplay .= ", " . $participantArray[$i];
			}
		}
		$participant = new FormatField;
		$participant->Name = "ColParticipants";
		$participant->Format = $participantDisplay;

		// END Participants

		// START acquisition source (donor)
		$donorArray = $recEx->MultivalueFieldAsArray("AccAccessionLotRef_tab->eaccessionlots->AcqSourceLocal");
		$donorDisplay = "";

                for ($i = 0;$i < count($donorArray); $i++)
                {
			if ($i == 0)
			{
				$donorDisplay = $donorArray[$i];
			}
			elseif ($i == count($donorArray) -1)
			{
                		$donorDisplay .= " & " . $donorArray[$i];
			}
			else
			{
                		$donorDisplay .= ", " . $donorArray[$i];
			}
		}
		$donor = new FormatField;
		$donor->Name = "AccAccessionLotRef_tab->eaccessionlots->AcqSourceLocal";
		$donor->Format = $donorDisplay;

		// END Participants

		// START specimen count + modifier
		$specimenCount = new FormatField;
		$specimenCount->Name = "SpecimenCount";
		$specimenCount->Format = '{CatSpecimenCount} {CatSpecimenCountModifier}';
		// END  specimen count + modifier

		// START Identification columns & Culture
		$currentCultureArray = $recEx->MultivalueFieldAsArray("CulCurrent_tab");
		$cultureSumdataArray = $recEx->MultivalueFieldAsArray("CulCultureRef_tab->eparties->SummaryData");

		$currentIdentificationArray = $recEx->MultivalueFieldAsArray("IdeAnthCurrent_tab");
		$objectNameArray = $recEx->MultivalueFieldAsArray("IdeObjectName_tab");
		$classIndexArray = $recEx->MultivalueFieldAsArray("IdeClassIndex_tab");
		$indexTermArray = $recEx->MultivalueFieldAsArray("IdeIndexTerm_tab");
		$subtypeArray = $recEx->MultivalueFieldAsArray("IdeSubType_tab");
		$varietyArray = $recEx->MultivalueFieldAsArray("IdeVariety_tab");
		$termArray = $recEx->MultivalueFieldAsArray("IdeTerm_tab");
		$objectDateArray = $recEx->MultivalueFieldAsArray("ArcObjectDate_tab");

                $cultureDisplay = "";
		$objectNameDisplay = "";
		$classIndexDisplay = "";
		$indexTermDisplay = "";
		$subtypeDisplay = "";
		$varietyDisplay = "";
		$termDisplay = "";
		$objectDateDisplay = "";
		$objectNameHeader = "";

                for ($i = 0;$i < count($cultureSumdataArray); $i++)
                {
                        if (strtolower($currentCultureArray[$i]) == "yes")
                        {
                                $cultureDisplay .= $cultureSumdataArray[$i] . "\n";
                        }
                }

                for ($i = 0;$i < count($objectNameArray); $i++)
                {
                        if (strtolower($currentIdentificationArray[$i]) == "yes")
                        {
				$objectNameDisplay .= $objectNameArray[$i] . "\n";
				$classIndexDisplay .= $classIndexArray[$i] . "\n";
				$indexTermDisplay .= $indexTermArray[$i] . "\n";
				$subtypeDisplay .= $subtypeArray[$i] . "\n";
				$varietyDisplay .= $varietyArray[$i] . "\n";
				$termDisplay .= $termArray[$i] . "\n";
				$objectDateDisplay .= $objectDateArray[$i] . "\n";
				if ($objectNameHeader == "")
				{
					$objectNameHeader = $objectNameArray[$i];
				}
				else
				{
					$objectNameHeader .= ", " . $objectNameArray[$i];
				}
                        }
                }

                $culture = new FormatField;
                $culture->Name = 'CulCultureRef_tab->eparties->SummaryData';
                $culture->Format = $cultureDisplay;

                $objectName = new FormatField;
                $objectName->Name = 'IdeObjectName_tab';
                $objectName->Format = $objectNameDisplay;

                $classIndex = new FormatField;
                $classIndex->Name = 'IdeClassIndex_tab';
                $classIndex->Format = $classIndexDisplay;

                $indexTerm = new FormatField;
                $indexTerm->Name = 'IdeIndexTerm_tab';
                $indexTerm->Format = $indexTermDisplay;

                $subtype = new FormatField;
                $subtype->Name = 'IdeSubType_tab';
                $subtype->Format = $subtypeDisplay;

                $variety = new FormatField;
                $variety->Name = 'IdeVariety_tab';
                $variety->Format = $varietyDisplay;

                $term = new FormatField;
                $term->Name = 'IdeTerm_tab';
                $term->Format = $termDisplay;

                $objectDate = new FormatField;
                $objectDate->Name = 'ArcObjectDate_tab';
                $objectDate->Format = $objectDateDisplay;
		// END Identification columns & Culture
		
		$barcode = $recEx->FieldAsValue("CatBarcode");
		if ($barcode != '')
		{
			$this->OtherHeader = $barcode;
		}
		if ($objectNameHeader != '')
		{
			if ($this->OtherHeader != '')
			{
				$this->OtherHeader .= "; " . $objectNameHeader;
			}
			else
			{
				$this->OtherHeader = $objectNameHeader;
			}
		}

		$this->Fields = array
		(
			$header,
			'CatBarcode',
			$specimenCount,
			'CatDivision',
			$objectName,			
			$classIndex,
			$indexTerm,
			$subtype,
			$variety,
			$term,
			$objectDate,
			$culture,
			'BioEventSiteRef->ecollectionevents->LocCountry',
                        'BioEventSiteRef->ecollectionevents->LocProvinceStateTerritory',
                        'BioEventSiteRef->ecollectionevents->LocDistrictCountyShire',
                        'BioEventSiteRef->ecollectionevents->LocTownship',
                        'BioEventSiteRef->ecollectionevents->LocPreciseLocation',
			'BioEventSiteRef->ecollectionevents->LocSiteName_tab',
			'BioEventSiteRef->ecollectionevents->LocSiteStationNumber',
			$arcSiteClassTable,
			$participant,
			'BioEventSiteRef->ecollectionevents->ColVerbatimDate',
			'AccAccessionLotRef_tab->eaccessionlots->LotLotNumber',
			$donor,
			'AccAccessionLotRef_tab->eaccessionlots->AcqDateOwnership',
			$otherNumbersTable,
		);

	}

	function
	Show()
	{
		/*
		**  The Show() method is resposible for sourcing the Language strings
		**  ($this->_STRINGS) and performing the query before calling display().
		*/
		$this->sourceStrings();
		$this->setupSchema();

		if (!isset($this->IRN))
		{
			WebDie('Invalid IRN', 'BaseDisplayObject');
		}

		// we don't grab the Multimedia ref if we are already in Multimedia
		if ($this->Database == "emultimedia")
		{
			$this->_buildSelectArray(array('irn', 'SummaryData'));
		}
		else
		{
			$this->_buildSelectArray(array('irn', 'SummaryData', 'MulMultiMediaRef_tab', 'AdmPublishWebNoPasswordLocal_tab'));
		}
		$this->_buildSelectArray($this->Fields);
		$this->_buildSelectArray($this->AdditionalFields);

		if (count($this->AdditionalFields) > 0)
		{
			$this->Fields = array_merge($this->Fields, $this->AdditionalFields);
		}

		$qry = new ConfiguredQuery;
		$qry->SelectedLanguage = $this->LanguageData;
		$qry->Intranet = $this->Intranet;
		$qry->Select = $this->selectArray;
			

		$qry->From = $this->Database;
		$qry->Where = 'irn=' . $this->IRN;
		$result = $qry->Fetch();

		if (!isset($result[0]->irn_1) || $result[0]->irn_1 == '')
		{
			print "<center>";
			print "<h2>";
			PPrint($this->_STRINGS['NO RESULTS'], $this->FontFace, '', $this->BodyTextColor);
			print"</h2>\n";
			print "<h3>";
			PPrint($this->_STRINGS['GO BACK'], $this->FontFace, '', $this->BodyTextColor);
			print "</h3>\n";
			print '<br /></center>';
			return;
		}

		$this->record = $result[0];

		// Now we call the display function
		$this->display();
	}

	function
	display()
	{

		$widthAttrib = '';
		if ($this->Width != '')
			$widthAttrib 	= 'width="' . $this->Width . '"' ;
		$bodyColorAttrib = '';
		if ($this->BodyColor != '')
			$bodyColorAttrib	= 'bgcolor=' . $this->BodyColor;
		$bodyTextColorAttrib = '';
		if ($this->BodyTextColor != '')
			$bodyTextColorAttrib	= 'color=' . $this->BodyTextColor;
		$highlightColorAttrib = '';
		if ($this->HighlightColor != '')
			$highlightColorAttrib	= 'bgcolor=' . $this->HighlightColor ;
		$headerTextColorAttrib = '';
		if ($this->HeaderTextColor != '')
			$headerTextColorAttrib= 'color=' . $this->HeaderTextColor;
		$borderColorAttrib = '';
		$headerColorAttrib = '';
		if ($this->BorderColor != '')
		{
			$borderColorAttrib= 'bordercolor=' . $this->BorderColor;
			$headerColorAttrib= 'bgcolor=' . $this->BorderColor;
		}
		$fontFaceAttrib = '';
		if ($this->FontFace != '')
			$fontFaceAttrib= 'face="' . $this->FontFace . '"';
		$fontSizeAttrib = '';
		if ($this->FontSize != '')
			$fontSizeAttrib= 'size="' . $this->FontSize . '"';
		if ($this->HeaderFontSize == '')
		{
			if ($this->FontSize != '')
				$this->HeaderFontSize = $this->FontSize + 1;
			else
				$this->HeaderFontSize = '+1';
		}

		print "<table $widthAttrib cellpadding=\"2\" cellspacing=\"0\" border=\"0\">\n";
		print "<tr><td align=\"left\">\n";
		$link = $this->QueryPage;

		if ($this->DisplayNewSearchLink)
		{
			print "&nbsp;<a href=\"$link\">";
			PPrint($this->_STRINGS['NEW SEARCH'], $this->FontFace, $this->FontSize, $this->BodyTextColor);
			print "</a>";
		}
		foreach ($this->OtherDisplayPages as $pagename => $pagelink)
		{
			$link = "$pagelink?irn=" . $this->IRN . "&amp;QueryPage=" . urlencode($this->QueryPage);
			PPrint(' | ', $this->FontFace, $this->FontSize, $this->BodyTextColor);
			print "<a href=\"$link\">";
			PPrint($pagename, $this->FontFace, $this->FontSize, $this->BodyTextColor);
			print "</a>";
		}

		print "</td>\n";
		print "</tr><tr><td colspan=\"2\">\n";
		$decorator = new HtmlBoxAndTitle;
		$decorator->BorderColor = $this->BorderColor;
		$decorator->BodyColor = $this->BodyColor;
		$decorator->TitleTextColor = $this->HeaderTextColor;
		$decorator->FontFace = $this->FontFace;
		$decorator->Width = "100%";
		if ($this->OtherHeader != '')
			$decorator->Title = $this->OtherHeader;
		else
			$decorator->Title = $this->record->{$this->HeaderField};
		$decorator->Open();

		if ($this->DisplayImage)
			$this->DisplayMedia();

		print "       <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"3\">\n";
		print "<!-- Start Field Content -->\n";

		// Foreach loop on each item in the $this->Fields var
		$i = $fieldNum = 0;
		foreach ($this->Fields as $item)
		{
			$fieldNum++;
			if (is_string($item))
			{
				if (isset($this->_STRINGS[$item]))
					$item = new Field($item, $this->_STRINGS[$item]);
				else
					$item = new Field($item, $item);
			}

			// Don't display if fields security doesn't allow
			if (isset($item->ValidUsers) 
				&& strtolower($item->ValidUsers) != 'all')
			{
				if (! $this->SecurityTester->UserIsValid($item->ValidUsers))
					continue;
			}

			// If it's a backreference item, then load data
			$this->_loadBackReferenceField($item);

			if (! $this->SuppressEmptyFields || $this->_hasData($item))
			{
				$i++;
				if ($fieldNum == 1)
					continue; // ignore first field as it's used in heading
				if ($i % 2 == 0)
					print "	<tr $highlightColorAttrib align=\"left\" valign=\"top\">\n";
				else
					print "	<tr align=\"left\" valign=\"top\">\n";
					
				// Print field name
				if ($item->Label != '')
					$label = $item->Label;
				elseif ($item->Name != '')
				{
					if (isset($this->_STRINGS[$item->Name]))
						$label = $this->_STRINGS[$item->Name];
					else
						$label = $item->Name;
				}
				else
				{
					if (isset($this->_STRINGS[$item->ColName]))
						$label = $this->_STRINGS[$item->ColName];
					else
						$label = $this->ColName;
				}

				if ($this->DisplayLabels)
				{
					print "	  <td width=\"160\"><b>";
					print "<font $bodyTextColorAttrib $fontFaceAttrib $fontSizeAttrib>";
					print $label;
					print "</font></b></td>\n"; 
				}
				else
				{
					print "	  <td>&nbsp;</td>\n";
				}


				print "	  <td>\n";
				$this->adjustOutput($item);
				print "</td>\n";
				print "	</tr>\n";
			}
		}

		
		// Print the extra multimedia
		$firstImage = ($this->DisplayImage) ? 2 : 1;
			
		$hasMedia = isset($this->record->{"MulMultiMediaRef:$firstImage"});
		if ($this->DisplayAllMedia && $hasMedia)
		{
			if ($i % 2 == 0)
				print "	<tr align=\"left\" valign=\"top\">\n";
			else
				print "	<tr $highlightColorAttrib align=\"left\" valign=\"top\">\n";

			// Print field name (This will normally be multimedia)
			if ($this->DisplayLabels)
			{
				print "	  <td width=\"160\"><b><font $bodyTextColorAttrib $fontFaceAttrib $fontSizeAttrib>".
						$this->_STRINGS['MEDIA'] . "</font></b></td>\n"; 
			}

			// Display Images
			print "	  <td>\n";
			print "<!-- Start a table of thumbnails -->\n";
			print "<table border=\"0\" cellpadding=\"3\"><tr>\n";
			$i = $firstImage;
			$imgcount = 0;
			$mmField = "MulMultiMediaRef:$i"; 
			$publishField = "AdmPublishWebNoPasswordLocal:$i"; 
			$imgirn = $this->record->$mmField;
			$publish = $this->record->$publishField;
			
			while ($imgirn != '')
			{
				if (strtolower($publish) == "yes")
				{
					if ($this->ImagesPerRow > 0 && ($imgcount % $this->ImagesPerRow == 0))
						print "</tr><tr>";

					print "<td align=\"center\">";
					$image = new MediaImage;
					$image->Intranet = $this->Intranet;
					$image->IRN = $imgirn;
					$image->BorderColor = $this->BorderColor;
					if ($this->SuppressImageBorders)
						$image->ShowBorder = 0;
					$image->HighLightColor = $this->BorderColor;
					$image->RefIRN = $this->IRN;
					$image->RefTable = $this->Database;
					$image->UseAbsoluteLinks = $this->UseAbsoluteLinks;
					$image->KeepAspectRatio = $this->KeepAssociatedImagesAspectRatio;
					$image->Width = 60;
					$image->Height = 60;
					if ($this->ImageDisplayPage != "")
					{
						$image->ImageDisplayPage = $this->ImageDisplayPage;
					}
					elseif($this->Intranet)
					{
						$image->ImageDisplayPage = $GLOBALS['INTRANET_DEFAULT_IMAGE_DISPLAY_PAGE'];
					}	
					else
					{
						$image->ImageDisplayPage = $GLOBALS['DEFAULT_IMAGE_DISPLAY_PAGE'];
					}
					$image->Show();
					$imgcount++;
					print "</td>";
				}

				$i++;
				$mmField = "MulMultiMediaRef:$i"; 
				$publishField = "AdmPublishWebNoPasswordLocal:$i"; 
				$imgirn = $this->record->$mmField;
				$publish = $this->record->$publishField;
			}

			print "</tr></table>";
			print "</td></tr>\n";
		}
		print "       </table>\n";
		print "<!-- End Field Content -->\n";

		$decorator->Close();

		print "<tr><td align=\"left\">\n";
                $link = $this->QueryPage;

                if ($this->DisplayNewSearchLink)
                {
                        print "&nbsp;<a href=\"$link\">";
                        PPrint($this->_STRINGS['NEW SEARCH'], $this->FontFace, $this->FontSize, $this->BodyTextColor);
                        print "</a>";
                }
                foreach ($this->OtherDisplayPages as $pagename => $pagelink)
                {
                        $link = "$pagelink?irn=" . $this->IRN . "&amp;QueryPage=" . urlencode($this->QueryPage);
                        PPrint(' | ', $this->FontFace, $this->FontSize, $this->BodyTextColor);
                        print "<a href=\"$link\">";
                        PPrint($pagename, $this->FontFace, $this->FontSize, $this->BodyTextColor);
                        print "</a>";
                }

                print "</td></tr>\n";

		print "</td></tr>";
		print "</table>\n";

	}
}

class
NmnhAnthPartyDisplay extends BaseStandardDisplay
{
	function
	NmnhAnthPartyDisplay()
	{
		$this->BaseStandardDisplay();
		$this->DisplayImage = 0;

		$this->Fields = array
		(
			'SummaryData',
			'NamTitle',
			'NamFirst',
			'NamMiddle',
			'NamLast',
			'BioBirthPlace',
			'BioDeathPlace',
			'BioEthnicity',
			'NotNotes',
		);
		$this->Database = 'eparties';
	}
}
?>
